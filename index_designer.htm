<?php
include_once("includes/gzip.htm");
include_once("includes/settings.htm");
include_once("includes/encryption.htm");
?>
<!DOCTYPE html>
<html lang="en">
    <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>1074 Vectors</title>
    <meta name="keywords" content="3D, programming,1074,vectors,picture,graphics,dimensions,engineering,Architecting,companies,software,homes ,RGB pixels,photograph,360 degrees,LIDAR,devices,SWOT ,mathematics,imaging,bytes,Stereoscopic ,memorized,data, x,y,z,DICOM ,Microsoft ,programmer ," />
    <meta name="description" content="3D programming make sense! When it deals with huge data, it’s interesting too. 1074 Vectors, the interactive 3D graphics expertize, homes here.

We love the evolution of interactive 3D graphics. 3D programming always had a glorious fancy part and an engineering part. It’s been challenging to keep performance with required accuracy." />
    <meta name="robots" content="index, follow" />
    <meta name="author" content="3D" />
    <meta name="copyright" content="3D"/>
    <meta name="publisher" content="3D"/>
    <!-- Set Viewport Options -->
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0;"/>
    <meta name='HandheldFriendly' content='true' />
    <meta name="apple-mobile-web-app-title" content="3D" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <!-- FB OPENGRAPH -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content="1074 Vectors" />
    <meta property="og:description" content="" />
    <meta property="og:site_name" content="1074 Vectors" />
    <meta property="og:image" content="" />
    <meta property="og:url" content="http://1074vectors.com "/>
    <!-- GOOGLE PLUS -->
    <meta itemprop="name" content="3D" />
    <meta itemprop="description" content="3D programming make sense! When it deals with huge data, it’s interesting too. 1074 Vectors, the interactive 3D graphics expertize, homes here.

We love the evolution of interactive 3D graphics. 3D programming always had a glorious fancy part and an engineering part. It’s been challenging to keep performance with required accuracy." />
    <link rel="icon" type="image/x-icon" href="images/favicon.png" />
    <link rel="stylesheet" href="css/animate.min.css">
    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="css/font-awesome.min.css">
    <link rel="stylesheet" href="css/3d.css">
    <script src="js/prefixfree.min.js"></script>
    <script src="js/jquery.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/jquery.singlePageNav.min.js"></script>
    <script src="js/typed.js"></script>
    <script src="js/wow.min.js"></script>
    <script src="js/custom.js"></script>
    <script type="text/javascript" src="js/jssor.core.js"></script>
    <script type="text/javascript" src="js/jssor.utils.js"></script>
    <script type="text/javascript" src="js/jssor.slider.js"></script>
    <script>
        jQuery(document).ready(function ($) {
			  var _CaptionTransitions = [];
            _CaptionTransitions["L"] = { $Duration: 900, $FlyDirection: 1, $Easing: { $Left: $JssorEasing$.$EaseInOutSine }, $ScaleHorizontal: 0.6, $Opacity: 2 };
            _CaptionTransitions["R"] = { $Duration: 900, $FlyDirection: 2, $Easing: { $Left: $JssorEasing$.$EaseInOutSine }, $ScaleHorizontal: 0.6, $Opacity: 2 };
            _CaptionTransitions["T"] = { $Duration: 900, $FlyDirection: 4, $Easing: { $Top: $JssorEasing$.$EaseInOutSine }, $ScaleVertical: 0.6, $Opacity: 2 };
            _CaptionTransitions["B"] = { $Duration: 900, $FlyDirection: 8, $Easing: { $Top: $JssorEasing$.$EaseInOutSine }, $ScaleVertical: 0.6, $Opacity: 2 };
            _CaptionTransitions["ZMF|10"] = { $Duration: 900, $Zoom: 11, $Easing: { $Zoom: $JssorEasing$.$EaseOutQuad, $Opacity: $JssorEasing$.$EaseLinear }, $Opacity: 2 };
            _CaptionTransitions["RTT|10"] = { $Duration: 900, $Zoom: 11, $Rotate: 1, $Easing: { $Zoom: $JssorEasing$.$EaseOutQuad, $Opacity: $JssorEasing$.$EaseLinear, $Rotate: $JssorEasing$.$EaseInExpo }, $Opacity: 2, $Round: { $Rotate: 0.8} };
            _CaptionTransitions["RTT|2"] = { $Duration: 900, $Zoom: 3, $Rotate: 1, $Easing: { $Zoom: $JssorEasing$.$EaseInQuad, $Opacity: $JssorEasing$.$EaseLinear, $Rotate: $JssorEasing$.$EaseInQuad }, $Opacity: 2, $Round: { $Rotate: 0.5} };
            _CaptionTransitions["RTTL|BR"] = { $Duration: 900, $Zoom: 11, $Rotate: 1, $FlyDirection: 10, $Easing: { $Left: $JssorEasing$.$EaseInCubic, $Top: $JssorEasing$.$EaseInCubic, $Zoom: $JssorEasing$.$EaseInCubic, $Opacity: $JssorEasing$.$EaseLinear, $Rotate: $JssorEasing$.$EaseInCubic }, $ScaleHorizontal: 0.6, $ScaleVertical: 0.6, $Opacity: 2, $Round: { $Rotate: 0.8} };
            _CaptionTransitions["CLIP|LR"] = { $Duration: 900, $Clip: 15, $Easing: { $Clip: $JssorEasing$.$EaseInOutCubic }, $Opacity: 2 };
            _CaptionTransitions["MCLIP|L"] = { $Duration: 900, $Clip: 1, $Move: true, $Easing: { $Clip: $JssorEasing$.$EaseInOutCubic} };
            _CaptionTransitions["MCLIP|R"] = { $Duration: 900, $Clip: 2, $Move: true, $Easing: { $Clip: $JssorEasing$.$EaseInOutCubic} };

            var options = {
                $FillMode: 2,                                       //[Optional] The way to fill image in slide, 0 stretch, 1 contain (keep aspect ratio and put all inside slide), 2 cover (keep aspect ratio and cover whole slide), 4 actuall size, default value is 0
                $AutoPlay: true,                                    //[Optional] Whether to auto play, to enable slideshow, this option must be set to true, default value is false
                $AutoPlayInterval: 4000,                            //[Optional] Interval (in milliseconds) to go for next slide since the previous stopped if the slider is auto playing, default value is 3000
                $PauseOnHover: 1,                                   //[Optional] Whether to pause when mouse over if a slider is auto playing, 0 no pause, 1 pause for desktop, 2 pause for touch device, 3 pause for desktop and touch device, default value is 1

                $ArrowKeyNavigation: true,   			            //[Optional] Allows keyboard (arrow key) navigation or not, default value is false
                $SlideEasing: $JssorEasing$.$EaseOutQuint,          //[Optional] Specifies easing for right to left animation, default value is $JssorEasing$.$EaseOutQuad
                $SlideDuration: 1200,                               //[Optional] Specifies default duration (swipe) for slide in milliseconds, default value is 500
                $MinDragOffsetToSlide: 20,                          //[Optional] Minimum drag offset to trigger slide , default value is 20
                //$SlideWidth: 600,                                 //[Optional] Width of every slide in pixels, default value is width of 'slides' container
                //$SlideHeight: 300,                                //[Optional] Height of every slide in pixels, default value is height of 'slides' container
                $SlideSpacing: 0, 					                //[Optional] Space between each slide in pixels, default value is 0
                $DisplayPieces: 1,                                  //[Optional] Number of pieces to display (the slideshow would be disabled if the value is set to greater than 1), the default value is 1
                $ParkingPosition: 0,                                //[Optional] The offset position to park slide (this options applys only when slideshow disabled), default value is 0.
                $UISearchMode: 1,                                   //[Optional] The way (0 parellel, 1 recursive, default value is 1) to search UI components (slides container, loading screen, navigator container, arrow navigator container, thumbnail navigator container etc).
                $PlayOrientation: 1,                                //[Optional] Orientation to play slide (for auto play, navigation), 1 horizental, 2 vertical, default value is 1
                $DragOrientation: 1,                                //[Optional] Orientation to drag slide, 0 no drag, 1 horizental, 2 vertical, 3 either, default value is 1 (Note that the $DragOrientation should be the same as $PlayOrientation when $DisplayPieces is greater than 1, or parking position is not 0)

                $CaptionSliderOptions: {                            //[Optional] Options which specifies how to animate caption
                    $Class: $JssorCaptionSlider$,                   //[Required] Class to create instance to animate caption
                    $CaptionTransitions: _CaptionTransitions,       //[Required] An array of caption transitions to play caption, see caption transition section at jssor slideshow transition builder
                    $PlayInMode: 1,                                 //[Optional] 0 None (no play), 1 Chain (goes after main slide), 3 Chain Flatten (goes after main slide and flatten all caption animations), default value is 1
                    $PlayOutMode: 3                                 //[Optional] 0 None (no play), 1 Chain (goes before main slide), 3 Chain Flatten (goes before main slide and flatten all caption animations), default value is 1
                },

                $BulletNavigatorOptions: {                          //[Optional] Options to specify and enable navigator or not
                    $Class: $JssorBulletNavigator$,                 //[Required] Class to create navigator instance
                    $ChanceToShow: 2,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
                    $AutoCenter: 1,                                 //[Optional] Auto center navigator in parent container, 0 None, 1 Horizontal, 2 Vertical, 3 Both, default value is 0
                    $Steps: 1,                                      //[Optional] Steps to go for each navigation request, default value is 1
                    $Lanes: 1,                                      //[Optional] Specify lanes to arrange items, default value is 1
                    $SpacingX: 8,                                   //[Optional] Horizontal space between each item in pixel, default value is 0
                    $SpacingY: 8,                                   //[Optional] Vertical space between each item in pixel, default value is 0
                    $Orientation: 1                                 //[Optional] The orientation of the navigator, 1 horizontal, 2 vertical, default value is 1
                },

                $ArrowNavigatorOptions: {                           //[Optional] Options to specify and enable arrow navigator or not
                    $Class: $JssorArrowNavigator$,                  //[Requried] Class to create arrow navigator instance
                    $ChanceToShow: 1,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
                    $AutoCenter: 2,                                 //[Optional] Auto center arrows in parent container, 0 No, 1 Horizontal, 2 Vertical, 3 Both, default value is 0
                    $Steps: 1                                       //[Optional] Steps to go for each navigation request, default value is 1
                }
            };

            var jssor_slider1 = new $JssorSlider$("slider1_container", options);

            //responsive code begin
            //you can remove responsive code if you don't want the slider scales while window resizes
            function ScaleSlider() {
                var bodyWidth = document.body.clientWidth;
                if (bodyWidth)
                    jssor_slider1.$SetScaleWidth(Math.min(bodyWidth, 1920));
                else
                    window.setTimeout(ScaleSlider, 30);
            }

            ScaleSlider();

            if (!navigator.userAgent.match(/(iPhone|iPod|iPad|BlackBerry|IEMobile)/)) {
                $(window).bind('resize', ScaleSlider);
            }


            //if (navigator.userAgent.match(/(iPhone|iPod|iPad)/)) {
            //    $(window).bind("orientationchange", ScaleSlider);
            //}
            //responsive code end
        });
    </script>
    </head>
    <body id="top">
<!--    <?php include("header.htm");?> -->

<!-- HEADER.HTM BEGIN --> 

<!-- start preloader -->

<div class="preloader">
  <div class="sk-spinner sk-spinner-wave">
    <div class="sk-rect1"></div>
    <div class="sk-rect2"></div>
    <div class="sk-rect3"></div>
    <div class="sk-rect4"></div>
    <div class="sk-rect5"></div>
  </div>
</div>
<!-- end preloader --> 
<!-- start navigation -->
<section id="navbar">
  <nav class="navbar templatemo-nav " role="navigation" >
    <div class="container" >
      <div class="navbar-header"><div id="logo"><a href="index.php" class="wow fadeInLeft"><img src="images/logo.png" height="70px" width="70px;" ></a></div> <div class="resmenu"><a id="resp-menu" class="responsive-menu" href="#">
   Menu</a></div>
        <ul class="menu wow fadeInUp" >
          <li><a  href="3d.php" >
            <div class="menulink"> 3D</div>
            <div class="menusep"></div>
            </a></li>
          <li><a  href="#Profile">
            <div class="menulink">Profile</div>
            </a></li>
          <li id="logomenu"><a href="index.php" class="wow fadeInLeft"><img src="images/logo.png" ></a></li>
          <li><a  href="#Thoughts">
            <div class="menulink">Thoughts</div>
            </a></li>
          <li><a  href="#Join">
            <div class="menusep"></div>
            <div class="menulink">Contact</div>
            </a> </li>
        </ul>
      </div>
    </div>
    </div>
  </nav>
</section>
<!-- end navigation --> 

<!-- start home --> 

<!-- HEADER.HTM END --> 

    <!-- end navigation -->
    <section id="banner">
      <div class="banner wow fadeInLeft" style="position: relative; margin: 0 auto;
        top: 0px; left: 0px; width: 100%; height:auto; overflow: hidden;"> <img src="images/banner.png"  style="width: 100%; height:auto;"/></div>
    </section>

    <!-- start home -->
    <section id="home1" class="slide">
      <div id="slider1_container" style="position: relative; margin: 0 auto;
        top: 0px; left: 0px; width: 1300px; height:503px; overflow: hidden;">
      
      <!-- Slides Container -->
      <div u="slides" style="cursor: move; position: absolute; left: 0px; top: 0px; width: 1300px;
            height: 503px; overflow: hidden;">
      <div> <img u="image" src="images/banner1.png" /> </div>
      <div> <img u="image" src="images/banner2.png" /> </div>
      <div> <img u="image" src="images/banner3.png" /> </div>
      
      <!-- bullet navigator container -->
      <div u="navigator" class="jssorb21" style="position: absolute; bottom: 26px; left: 6px;"> 
        <!-- bullet navigator item prototype -->
        <div u="prototype" style="POSITION: absolute; WIDTH: 19px; HEIGHT: 19px; text-align:center; line-height:19px; color:White; font-size:12px;"></div>
      </div>
      <!-- Bullet Navigator Skin End --> 
      
      <!-- Arrow Navigator Skin Begin -->
      <style>
            /* jssor slider arrow navigator skin 21 css */
            /*
            .jssora21l              (normal)
            .jssora21r              (normal)
            .jssora21l:hover        (normal mouseover)
            .jssora21r:hover        (normal mouseover)
            .jssora21ldn            (mousedown)
            .jssora21rdn            (mousedown)
            */
            .jssora21l, .jssora21r, .jssora21ldn, .jssora21rdn
            {
            	position: absolute;
            	cursor: pointer;
            	display: block;
                background: url(images/a09.png) center center no-repeat;
                overflow: hidden;
            }
            .jssora21l { background-position: -3px -33px; }
            .jssora21r { background-position: -63px -33px; }
            .jssora21l:hover { background-position: -123px -33px; }
            .jssora21r:hover { background-position: -183px -33px; }
            .jssora21ldn { background-position: -243px -33px; }
            .jssora21rdn { background-position: -303px -33px; }
        </style>
      <!-- Arrow Left --> 
      <span u="arrowleft" class="jssora21l" style="width: 55px; height: 55px; top: 123px; left: 0px;"> </span> 
      <!-- Arrow Right --> 
      <span u="arrowright" class="jssora21r" style="width: 55px; height: 55px; top: 123px; right: 0px"> </span> 
      <!-- Arrow Navigator Skin End --> 
      
    </section>

    <!-- end home --> 
    <!---start profile--->
    
    <section id="profile" >
    <a name="Profile"></a>
    <div class="container" >
        <div class="row">
          <div class="col-sm-12 heading wow fadeInDown " align="center"><img src="images/profile1.png" width="99" height="99"> <span class="headspace">Profile</span></div>
        </div>
        <div class="row">
          <div class="desc wow fadeInLeft">
            <p>3D programming make sense! When it deals with huge data, it’s terribly interesting too. 1074 Vectors, the interactive 3D graphics expertize, homes here.</p>
            <p>We love the evolution of interactive 3D graphics. 3D programming always had a glorious fancy part and an engineering part. It’s been challenging to keep performance with required accuracy. How we balance the usage of memory to reduce repeated computing? When it mixes with distributed nature and capacity of the new generation head-end devices, it can be again challenging. Engineering always serves the purpose well, any artistic rendering will be neglected. But without a good combination of colors and effects a good software will not please users.</p>
            <p>From Da-Vinci days itself, architecting plays an important role to beautify engineering for an artistic purpose. Architecting is not just engineering its very close to art.</p>
            <p>We do business because of passion in 3D graphics. See business link…</p>
            <p>All companies have weak part in their SWOT charts. Our point to mention is schedule constraints. We have strict privacy handling strategy to protect our customer’s intellectual interests. The side effect is we heavily depend on the people we have. So book your engagement period before hand. But always feel free to talk… we are happy to hear you.</p>
          </div>
        </div>
      </div>
    </section>
    <!---end profile---> 
    <!-- start about -->
    <section id="thoughts" >
    <a name="Thoughts"></a>
      <div class="container" >
        <div class="row">
          <div class="col-sm-12 heading  wow fadeInDown" align="center"><img src="images/thought.png"> <span class="headspace">Thoughts</span></div>
        </div>
        <div class="row content">
          <div class="col-sm-12">
            <p>Professional 3D is not a single aspect. These thoughts will definitely give you a new dimension.</p>
          </div>
        </div>
        <div class="row details">
          <div class="col-sm-3 wow fadeInLeft"><a href="thoughts.htm">
            <div class="img"><img src="images/imag1.png" style="border:none;"></a></div>
            <div class="articlename">
              <h4>Acquiring 3D</h4>
            </div>
            <div class="desc"> Stereoscopic imaging is the simple way to sense 3D. It is same as the way brain senses 3D from our eyes. All the one you need is two webcams with proper overlapped frustum. Correlate the same physical points on the two views that you get... </div>
            <div class="more"><a href="thoughts.htm#Acquire3D"><img src="images/arow.png"></a></div>
          </div>
          <div class="col-sm-3 wow fadeInLeft"><a href="thoughts.htm">
            <div class="img"><img src="images/imag2.png" style="border:none;"></a></div>
            <div class="articlename">
              <h4>3D In Memory</h4>
            </div>
            <div class="desc">Usually storing in memory is a challenge for professional 3D applications. What is the simple way is keep a set of points? Each with 3 position values. That is x,yand z. just a keep a list of points. It is the most natural way of memory representation. But this...</div>
            <div class="more"><a href="thoughts.htm#3DInMemory"><img src="images/arow.png"></a></div>
          </div>
          <div class="col-sm-3 wow fadeInLeft"><a href="thoughts.htm">
            <div class="img"><img src="images/imag3.png" style="border:none;"></a></div>
            <div class="articlename">
              <h4>Challenges in 3D Editing</h4>
            </div>
            <div class="desc"> It was always been difficult to interact with 3D models on a computer screen as it is just a 2D space and the sense of depth is provided using the perspective display method. One can easily understand the movement of an object in the 2 directions...</div>
            <div class="more"><a href="thoughts.htm#EditingChallenge"><img src="images/arow.png"></a></div>
          </div>
          <div class="col-sm-3 wow fadeInLeft"><a href="thoughts.php">
            <div class="img"><img src="images/imag4.png" style="border:none;"></a></div>
            <div class="articlename">
              <h4>3D Programming APIs</h4>
            </div>
            <div class="desc">There are only a few options when it comes to programming in 3D. While Microsoft is promoting DirectX and Apple promoting Metal, there is a huge fan base for Open GL too which is an open specification driven by the Khronos group. Of course...</div>
            <div class="more"><a href="thoughts.htm#3DAPIs"><img src="images/arow.png"></a></div>
          </div>
        </div>
        <div class="row morearticle">
          <div class="col-sm-12 morearticles wow fadeInUp"><a href="thoughts.htm#Multi-GPU">MORE ARTICLES</a></div>
        </div>
      </div>
    </section>
    <section id="join" >
    <a name="Join"></a>
      <div class="container" >
        <div class="row">
          <div class="col-sm-12 heading  wow fadeInDown" align="center"><img src="images/thought.png"> <span class="headspace">Join</span></div>
        </div>
        <div class="row desc">
       <p><b> We welcome all challenge loving programmers.</b></p>

<ul><li> Passion towards 3D is our first criteria.</li>
<li>Then a sense in 3D. With a white board or piece of paper,  its hard to communicate 3D. Only indications that we can draw or talk. Right? Yea.. then you got it. J</li>
<li> You may be good in JS or openGL ES. We agree that you are an expert too. But in 1074 vectors, we love close-to-metal programming knowledge. We call it knowledge of system architecture, c programming knowledge, network stack knowledge, processor architecture or simply under-the-hood programmer knowledge!</li>
<li>Be connected. We want you to learn seamlessly. Be abreast.</li>
<li> Travel friendly…? Good.. not just flying and talking; we want you to know and respect global cultures. </li> 

<p>Finally but very important: Trust…! We trust you and you trust us. Reach business/privacy. That is our commitment. If you are ready for that professional life based on trust, you are welcome to join us.</p>

 
        </div>
        </div>
        </section>

    <!-- start footer -->
    <?php include("footer.htm");?>
</body>
</html>
