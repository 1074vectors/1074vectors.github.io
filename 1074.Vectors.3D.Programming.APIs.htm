<html>

<head>
  <!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">

<!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous">

<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
</head>

<body style="background-color:black;color:orange;margin:10px;" >
<br>
&nbsp&nbsp
<img src="images/1074vectors_logo.png" alt="1074 Vectors logo" width ="800"/>
<br><br>
<br><br>

<h1> Choice of 3D Programming APIs </h1>
<br><br>
<p>There are only a few options when it comes to programming in 3D. While Microsoft is promoting DirectX and Apple promoting Metal, there is a huge fan base for Open GL too which is an open specification driven by the Khronos group. Of course, the popularity of Open GL is because of its cross-platform support. While the DirectX is only addressing Microsoft Windows and the Metal supporting only iOS and OS X, Open GL can be used literally anywhere; Windows, Linux, iOS, OS X or even Android. But at the same time, the platform specific APIs provides better performance than Open GL. The latest version of DirectX and Metal being low level APIs results in reduced overhead for applications and thus provides better performance. </p>
<p>But everything may change, with the new Vulkan, as it targets those who donâ€™t want to lose the cross platform support for better performance.  Vulkan too is a low level API which should not have any overhead. But it comes with a cost associated. The cost of development should go higher as the developer has to get down to the nitty-gritty of 3D programming. But the bright side is, we can opt between performance and cost of development. To be more precise, with the level of modularity, we can decide on the overhead which we can afford against the development time which we want to save. If you want shorter development cycle, just use some open source engines which will hide the complexity for you in exchange of any overhead associated with that engine. But if you are so particular in getting the maximum performance, you might have to work close to metal using only the Vulkan core. Next comes the question of portability. As Vulkan is backed by industry leaders, it should be supporting a number of platforms as Open GL. As per the available information, it looks very nice and clean and with the introduction of SPIR-V as the intermediate language, we can expect more and more languages which will be able to use the advantages that Vulkan offers allowing more developers to use the language of their choice. Also the move from a global state based system to a much commonly used object driven method too might be appealing for many. </p>
<p>All in all, it seems to be a good idea to move to Vulkan and I would love to do something of commercial value with it. But, as it launched only recently, we have to wait before we can give a verdict on its acceptability. Also, the other APIs; be it DirectX or Open GL; too will continue to develop and might remain as a favourite choice at least for some of the 3D developers.</p>

<br><br>
------

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-74257275-1', 'auto');
  ga('send', 'pageview');
</script>
</body>

</html>